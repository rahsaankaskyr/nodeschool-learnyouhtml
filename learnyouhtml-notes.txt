# Learn HTML  
   
 ## HELLO WORLD (Exercise 1 of 11)  
   
      _                                         _     _             _  
     | | ___  __ _ _ __ _ __  _   _  ___  _   _| |__ | |_ _ __ ___ | |  
     | |/ _ \/ _` | '__| '_ \| | | |/ _ \| | | | '_ \| __| '_ ` _ \| |  
     | |  __/ (_| | |  | | | | |_| | (_) | |_| | | | | |_| | | | | | |  
     |_|\___|\__,_|_|  |_| |_|\__, |\___/ \__,_|_| |_|\__|_| |_| |_|_|  
                              |___/  
   
  Welcome to learnyouhtml!  
   
 ### What is HTML?  
   
  HTML or HyperText Markup Language is a markup language for creating  
  webpages. Webpages are usually viewed in a web browser. They can include  
  writing, links, pictures, and even sound and video. HTML is used to mark  
  and describe each of these kinds of content so the web browser can show  
  them correctly.  
   
  HTML can also be used to add meta information to a webpage. Meta  
  information is information about the web page. For example, the name of  
  the person who made it. Meta information is not usually shown by web  
  browsers.  
   
  HTML was made by the World Wide Web Consortium (W3C). There are many  
  versions of HTML. The current standard is HTML5. So, it is the version the  
  W3C recommends.  
   
 ### Why do I need to learn HTML?  
   
  HTML is a cornerstone of web. It's what you see in your browser every time  
  you open a favorite site.  
   
  If you're going to work in web development area, then you definitely need  
  to know what is HTML, how to read it and how to use it.  
   
 ### Browser  
   
  You need to have a browser — a program to read HTML documents and display  
  them. There are a lot of them, but we recommend one of these:  
   
   » [Google Chrome](https://www.google.com/chrome)                              
   » [Mozilla Firefox](https://www.mozilla.org/en-US/firefox/new)                
   
 ### Editor  
   
  HTML-document could be created in any text editor, even Notepad.  
  Nevertheless, it would be better if you will use a special editor with  
  useful features, like syntax highlighting, tabs, autocompletions, etc.  
   
  We recommend you one of these text editors:  
   
   » [Atom](https://atom.io)                                                     
   » [Sublime Text](https://www.sublimetext.com/)                                
   » [Brackets](http://brackets.io/)                                             
   
 ### How to use this workshopper?  
   
  This workshopper will guide you through the simple exercises which explain  
  the core principles of HTML. In most cases, it's enough to use only three  
  commands:  
   
   » learnyouhtml run file.html will serve a local server at                                                                            
     http://localhost:3000/ with a preview of file.html.                         
   » learnyouhtml verify file.html will verify your file.                        
   » learnyouhtml help shows a help message.                                     
   
 ## THE CHALLENGE  
   
  Create a new empty file called index.html and put these lines in there:  
   
     <!DOCTYPE html>  
     <html>  
       <head>  
         <meta charset="utf-8">  
         <title>Hello, world!</title>  
       </head>  
       <body>  
         here is a body  
       </body>  
     </html>  
   
  This is your boilerplate for all of next exercises. Everything you're  
  going to do you'll do with that snippet.  
   
  It's okay if you don't understand what is going on. This lines will be  
  explained in following exercises.  
   
  Run learnyouhtml verify to verify your solution or learnyouhtml run to see  
  the result in the browser.  
   
 ─────────────────────────────────────────────────────────────────────────────  
   
   » To print these instructions again, run: learnyouhtml print                  
   » To execute your program, run: learnyouhtml run file.html                    
   » To verify your program, run: learnyouhtml verify file.html                  
   » For help run: learnyouhtml help 



## TAGS (Exercise 2 of 11)  
   
  HTML uses special bits of programming language called tags to let the  
  browser know how a webpage should look. The tags usually come in pairs: an  
  opening tag to tell the browser when to start doing something, and an  
  ending tag to tell the browser when to stop doing something. There are  
  many different kinds of tags, and each one has a different purpose.  
   
  Let's think of tags like it's some kind of selection tool in text editors.  
  In text editor, such as Microsoft Office Word or Writer, if you want to  
  make text bold you select a part of text and click corresponding button  
  (b). In HTML, you have tags for that reason.  
   
                     ┌── a "selected" text ──┐  
                     ↓                       ↓  
     Lorem ipsum <tagname>dolor sit amet</tagname>, consectetur adipisicing elit.  
   
  Opening tags have a keyword, such as p, surrounded by angle brackets (<  
  and >). For example, the tag <p> tells the browser the start a new  
  paragraph. Ending tags look almost exactly the same, only they have a  
  forward slash (/) added just before the keyword. For example, the tag </p>  
  tells the browser to end a paragraph.  
   
     <p>this is a paragraph</p>  
   
  A small number of tags, like <br>, <img> and <hr>, can be used without an  
  ending tag. Here is what these tags do:  
   
   » <br> - produces a line break in text (carriage-return). It is useful                                                                            
     for writing a poem or an address, where the division of lines is                                                                            
     significant.                                                                
   » <img> — represents an image in the document. We will consider this tag                                                                            
     later.                                                                      
   » <hr> — represents a thematic break between paragraph-level elements. In                                                                            
     previous versions of HTML, it represented a horizontal rule. It may                                                                            
     still be displayed as a horizontal rule in visual browsers.                 
   
  You could use them like this:  
   
     <p>first paragraph</p>  
     <hr>  
     <p>second paragraph</p>  
   
 ### Basic HTML document  
   
  In previous exercise you've created a document. Let's consider its  
  content:  
   
     <!DOCTYPE html>  
     <html>  
       <head>  
         <meta charset="utf-8">  
         <title>Hello, world!</title>  
       </head>  
       <body>  
         here is a body  
       </body>  
     </html>  
   
  Here we have a <html> tag which wrap whole document — this tag indicates  
  where the HTML document begins and where it ends.  
   
  The HTML document has its own <head> and <body>. In the <head> tag we put  
  all information about document, like meta-tags and <title>. The content of  
  the <title> tag will be shown in the browser's title bar when displaying  
  this document. In the <body> we put everything we want to be drawn in  
  browser's window: headings, text, images, etc.  
   
  Probably, you still have a question: "What does the <meta charset="utf-8">  
  tag do?" Well, this is a special tag — a meta-tag. Meta-tags are used for  
  describing a document. It's a bit weird, but keep thinking about meta-tags  
  as an information about information. Directly, this tag means that we want  
  to use the utf-8 charset for our document.  
   
 ## THE CHALLENGE  
   
  You already have an HTML-document. In <body> add two paragraphs (<p>) with  
  any text you like. Please, separate these two tags with a horizontal rule  
  (<hr> tag).  






## ATTRIBUTES (Exercise 3 of 11)  
   
  In this exercise we are going to take a look at tag attributes.  
   
  Tag attributes extend the ability of tags and give us flexible control  
  over different options for displaying elements or configuring their  
  behavior. There are a lot of attributes for different purposes like color,  
  size, address and so on.  
   
  You can specify attributes like this:  
   
     <tag attribute1="value1" attribute2="value2">some text</tag>  
     <!-- or for self-closing tag -->  
     <tag attribute1="value1" attribute2="value2">  
   
  The HTML specification mandates that all values of attributes be wrapped  
  in double quotes (attribute="value") or single quotes (attribute='value').  
  Omitting these quotes wouldn't cause an error, because browsers, in most  
  of cases, will handle this code correctly. However, you can get a problem  
  if you try to define a value with spaces and don't wrap this value in  
  quotes. Consider this example:  
   
     <!-- with double quotes -->  
     <tag attribute="value with spaces"></tag>  
     <!-- with single quotes -->  
     <tag attribute='value with spaces'></tag>  
     <!-- without quotes -->  
     <tag attribute=value with spaces></tag>  
   
  In the third example above, we have got a problem. Only value would be  
  used as a value of attribute, so with and spaces would be ignored as  
  invalid attributes. That's why we suggest you to wrap values of attributes  
  in quotes.  
   
  There are a few important things you need to remember: if you didn't  
  specify an attribute, the browser will use default values for that  
  attribute. The order of the attributes doesn't matter. And each attribute  
  requires a specific type of value (text, number, path to file, etc).  
   
 ## THE CHALLENGE  
   
  You're already familiar with the <img> tag from the previous exercise.  
  This tag embeds an image in the page. This tag has a few important  
  attributes:  
   
   » src - the image URL. This attribute is mandatory for the <img> element.     
   » alt - this attribute defines the alternative text describing the image.                                                                            
     Users will see this text displayed if the image URL is wrong or if the                                                                            
     image is not yet downloaded.                                                
   » height - the intrinsic height of the image in pixels.                       
   » width - the intrinsic width of the image in pixels.                         
   
  You need to create an HTML document with an image. Feel free to set any  
  values for src and alt attributes.  







## INLINE TAGS (Exercise 4 of 11)  
   
  You know how to create an paragraph of text, so it's enough to write your  
  own book using HTML! Sometimes we meet highlighted words in books, like  
  definitions or something. Unfortunately, you don't know how to highlight  
  words in HTML. However, you're here, so that's easy to fix.  
   
 ### Font faces  
   
  If you need to make a part of text bolder, then don't forget about  
  <strong> or <b> tags. Use them as in following example:  
   
     <p>Here are few <strong>important</strong> words</p>  
   
  This HTML markup will produce this result:  
   
  |> Here are few important words.  
   
  In case with italic highlighting, use <em> or <i> tags:  
   
     <p>Here are few <em>important</em> words</p>  
   
  Preview:  
   
  |> Here are few important words.  
   
  <b> and <strong>, as well as <i> and <em> produce similar results in  
  browsers. However, they aren't equivalents and interchangeable. <b> means  
  just bold text, at the same time <strong> is a tag of logical markup and  
  highlights the tagged text. Here again with <i> which means italic text  
  and <em> for emotional highlighted words.  
   
 ### Upper and lower indexes  
   
  An index relative to a text is the shift (up or down) of characters  
  relative to the baseline. Depending on shifting, the index is called,  
  upper index or lower index. They are actively used in mathematics,  
  physics, chemistry and to designate units of measurement. Obviously, there  
  are corresponding tags in HTML for lower and upper indexes:  
   
   » <sup> - upper index                                                         
   » <sub> - lower index                                                         
   
  The text placed in one of these containers is designated by a smaller size  
  than the base text and shifted relative to the horizontal. Consider an  
  example:  
   
     <p><b>The formula of sulfuric acid:</b> <i>H<sub>2</sub>SO<sub>4</sub></i></p>  
       
     <p><b>Pythagoras's theorem:</b> a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup></p>  
   
  Preview:  
   
  |> The formula of sulfuric acid: H₂SO₄  
   
  |> Pythagoras's theorem: a² + b² = c²  
   
 ### Grouping inline elements  
   
  Sometimes you need to wrap some text or other elements in a tag which  
  which does not inherently represent anything, for example, for styling  
  purposes. <span> tag is exactly for this purpose. It is a generic inline  
  container for phrasing content, which does not inherently represent  
  anything. It can be used to group elements for styling purposes, or  
  because they share attribute values. It should be used only when no other  
  semantic element is appropriate.  
   
  Use <span> like this:  
   
     <p>Lorem ipsum <span>dolor sit amet</span>, consectetur adipisicing elit.</p>  
   
  For now, <span> may seem useless for you, but believe it's one of the most  
  common usable tag in HTML.  
   
 ### Pitfalls  
   
  Any number of spaces are displayed as one in the browser. These three  
  paragraphs will look exactly the same in the browser:  
   
     <p>one. two. three<p>  
     <p>one.    two.    three<p>  
     <p>one.        two.        three<p>  
   
  HTML doesn't support hyphenation in words, as text editors do, in other  
  words, all words are written entirely without splitting them.  
   
  Text takes up the whole width of the browser window. If you just write one  
  long line in the HTML code, then in the browser it will be formatted, so  
  that text will fit whole width of the window. If this text is wider than  
  the browser's window, then a horizontal scroll bar would appear.  
   
  You can use a special character entity references. You can define them  
  like this: &name;, where name - is a name of entity reference. Here is a  
  few of them:  
   
   » &​quot; - double quotation mark (")                                          
   » &​amp; - ampersand (&)                                                       
   » &​apos; - apostrophe (apostrophe-quote) (')                                  
   » &​lt; - less-than sign (<)                                                   
   » &​gt; - greater-than sign (>)                                                
   
  Read more about these entities here:  
  (https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_refer  
  ences)  
   
 ## THE CHALLENGE  
   
  In this exercise you need to create 5 paragraphs of any text and use  
  <strong>, <em>, <sup>, <sub> and <span> tag in these paragraphs, one tag  
  per paragraph.  




 ## HEADINGS (Exercise 5 of 11)  
   
  Almost in any article or blog post you need to divide your content by  
  logical parts with corresponding heading. HTML provide six levels of  
  heading elements.  
   
  Headings play important role on a web page. First, they show the  
  importance of the section they belong to. Remember in the newspapers and  
  magazines the most important news are typed in large print, thereby  
  attracting attention to them and saying: "This is something that must be  
  read". Secondly, with the help of different headings it is easy to adjust  
  the size of the text. The higher the header level, the larger the font  
  size.  
   
  There are six levels of heading. The following code shows all the heading  
  levels, in use:  
   
     <h1>Heading level 1</h1>  
     <h2>Heading level 2</h2>  
     <h3>Heading level 3</h3>  
     <h4>Heading level 4</h4>  
     <h5>Heading level 5</h5>  
     <h6>Heading level 6</h6>  
   
  Heading information may be used by user agents, for example, to construct  
  a table of contents for a document automatically.  
   
  Despite the fact that headlines increase font size, do not use lower  
  levels for that purpose. There are corresponding CSS-properties.  
   
  Avoid skipping heading levels: always start from <h1>, next use <h2> and  
  so on.  
   
  Typically, the web page uses headings from the first to the third level,  
  they are enough. Rarely when you need to use headers of a lower level.  
   
 ## THE CHALLENGE  
   
  You know how to create heading and paragraphs. Please, create a document  
  with these structure:  
   
 ─────────────────────────────────────────────────────────────────────────────  
   
 # Heading elements  
   
 ## Summary  
   
  Some text here...  
   
 ## Examples  
   
 ### Example 1  
   
  Some text here...  
   
 ### Example 2  
   
  Some text here...  
   
 ## See also  
   
  Some text here...  







